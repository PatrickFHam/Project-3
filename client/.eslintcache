[{"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\index.js":"1","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\App.js":"3","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Login.js":"4","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Signup.js":"5","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\components\\Footer\\index.js":"6","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\components\\Header\\index.js":"7","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\utils\\mutations.js":"8","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\utils\\auth.js":"9","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Bucket.js":"10","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Dashboard.js":"11","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\LandingPage.js":"12"},{"size":478,"mtime":1654354450532,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1654354450534,"results":"15","hashOfConfig":"14"},{"size":2343,"mtime":1654564524988,"results":"16","hashOfConfig":"14"},{"size":2381,"mtime":1654565880271,"results":"17","hashOfConfig":"14"},{"size":2458,"mtime":1654566764563,"results":"18","hashOfConfig":"14"},{"size":623,"mtime":1654569830921,"results":"19","hashOfConfig":"14"},{"size":1375,"mtime":1654569155501,"results":"20","hashOfConfig":"14"},{"size":495,"mtime":1654354450536,"results":"21","hashOfConfig":"14"},{"size":719,"mtime":1654354450536,"results":"22","hashOfConfig":"14"},{"size":258,"mtime":1654564497021,"results":"23","hashOfConfig":"14"},{"size":727,"mtime":1654569741458,"results":"24","hashOfConfig":"14"},{"size":291,"mtime":1654568306496,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"l8iit0",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\index.js",[],["55","56"],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\App.js",["57"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { createTheme, NextUIProvider } from '@nextui-org/react';\n\nimport LandingPage from './pages/LandingPage';\nimport Bucket from './pages/Bucket';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Dashboard from './pages/Dashboard';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  // 2. Call `createTheme` and pass your custom values\n  const lightTheme = createTheme({\n    type: 'light',\n    /* theme: {\n      colors: {},\n    } */\n  })\n\n  const darkTheme = createTheme({\n    type: 'dark',\n    /* theme: {\n      colors: {},\n    } */\n  })\n\n  return (\n    <ApolloProvider client={client}>\n      <NextUIProvider theme={darkTheme}>\n        <Router>\n          <div >\n            <Header />\n            <div >\n              <Routes>\n                <Route \n                  path=\"/\" \n                  element={<LandingPage />}\n                />\n                <Route \n                  path=\"/bucket\" \n                  element={<Bucket />}\n                />\n                <Route \n                  path=\"/login\" \n                  element={<Login />}\n                />\n                <Route \n                  path=\"/signup\" \n                  element={<Signup />}\n                />\n                <Route \n                  path=\"/dashboard\" \n                  element={<Dashboard />}\n                />\n              </Routes>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </NextUIProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Login.js",["58"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_READER } from '../utils/mutations';\nimport { Container, Text, Input, Button } from '@nextui-org/react';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_READER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <Container>\n      <div >\n        <div >\n          <h4 >Login</h4>\n          <div >\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <Input\n                  underlined\n                  secondary\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <Input\n                  underlined\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <Button\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Signup.js",["59"],"import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {useMutation} from \"@apollo/client\";\nimport {ADD_READER} from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { Container, Text, Input, Button } from '@nextui-org/react';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addReader, {error, data}] = useMutation(ADD_READER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const {data} = await addReader({\n        variables: {...formState},\n      });\n\n      Auth.login(data.addReader.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main>\n      <Container>\n        <div>\n          <h4>Sign Up</h4>\n          <div>\n            {data ? (\n              <p>\n                Success! You may now head{\" \"}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <Input\n                  underlined\n                  success\n                  placeholder=\"Your username\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <Input\n                  underlined\n                  secondary\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <Input\n                  underlined\n                  warning\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <Button style={{cursor: \"pointer\"}} type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            )}\n\n            {error && <div>{error.message}</div>}\n          </div>\n        </div>\n      </Container>\n    </main>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\components\\Footer\\index.js",["60"],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\components\\Header\\index.js",["61"],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\utils\\auth.js",[],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Bucket.js",["62"],"import React from \"react\";\nimport { Container, Text } from '@nextui-org/react';\n\nfunction Bucket(props) {\n  return (\n  <Container className=\"the-bucket-container\">\n    <h2>Available Passages</h2>\n    <div></div>\n  </Container>\n  )\n};\n\nexport default Bucket;\n","C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\Dashboard.js",["63"],"C:\\Users\\Jeff\\Documents\\BootCamp\\GitHub Repos\\Re-engage\\client\\src\\pages\\LandingPage.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":44,"column":9,"nodeType":"70","messageId":"71","endLine":44,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":5,"column":21,"nodeType":"70","messageId":"71","endLine":5,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":6,"column":21,"nodeType":"70","messageId":"71","endLine":6,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":3,"column":21,"nodeType":"70","messageId":"71","endLine":3,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":4,"column":21,"nodeType":"70","messageId":"71","endLine":4,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":2,"column":21,"nodeType":"70","messageId":"71","endLine":2,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":2,"column":21,"nodeType":"70","messageId":"71","endLine":2,"endColumn":25},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'lightTheme' is assigned a value but never used.","Identifier","unusedVar","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]